import { FastifyInstance, FastifyRequest, FastifyReply } from 'fastify';

interface RouteParams {
    id: string;
  }





async function routes(fastify: FastifyInstance) {
    fastify.get('/', async (request, reply) => {
      const [rows] = await fastify.db.query('SELECT * FROM tu_preferes');
      return rows;
    });

    fastify.get<{ Params: RouteParams }>('/tpf/:id', async (request, reply) => {
        const [rows]:any = await fastify.db.query('SELECT * FROM tu_preferes WHERE id = ?', [request.params.id]);
        if (rows.length === 0) {
          reply.status(404);
          return { error: 'Post not found' };
        } else {
        return rows[0];
        }
      });

      fastify.post('/', async (request, reply) => {
        try {
          const newPost:TuPreferes = request.body as TuPreferes;
          const result = await fastify.db.query(
            'INSERT INTO tu_preferes (prompt1, img_url1, nb_clic1, prompt2, img_url2, nb_clic2, author_id, creation_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?)', 
            [newPost.prompt1, newPost.img_url1, newPost.nb_clic1, newPost.prompt2, newPost.img_url2, newPost.nb_clic2, newPost.author_id, new Date()]
          );
          reply.send({ result: "success" });
        } catch (error) {
          request.log.error(error);
          reply.status(500).send({ error: "An error occurred while creating the post" });
        }
      });

      //route tu update the number of clics
      fastify.put<{ Params: RouteParams }>('/vote/:id', async (request, reply) => {
        const [rows]:any = await fastify.db.query('SELECT * FROM tu_preferes WHERE id = ?', [request.params.id]);
        if (rows.length === 0) {
          reply.status(404);
          return { error: 'Post not found' };
        } else {
          const selectedClick = request.body as { selectedClick: number };
          if (selectedClick.selectedClick === 1) {
            await fastify.db.query('UPDATE tu_preferes SET nb_clic1 = nb_clic1 + 1 WHERE id = ?', [request.params.id]);
          } else if (selectedClick.selectedClick === 2) {
            await fastify.db.query('UPDATE tu_preferes SET nb_clic2 = nb_clic2 + 1 WHERE id = ?', [request.params.id]);
          } else {
            reply.status(400);
            return { error: 'Invalid click' };
          }
          reply.send({ result: "success" });
        }
      });
  }

export default routes;